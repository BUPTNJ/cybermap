name: Publish And Deploy
on:
  push:
    tags: 
      - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 运行环境，告诉它运行在什么环境
    steps: # 步骤

    - name: Checkout
      uses: actions/checkout@master

    - name: Build
      uses: actions/setup-node@master
    - run: tar -zcvf release.tgz --exclude=LICENSE.txt --exclude=README.txt --exclude=.gitignore --exclude=.github *

    - name: Create Release # 创建Release，可以在仓库看到一个个版本
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }} # 之前GitHub添加的Token
      with:
        tag_name: ${{ github.ref }} # (tag)标签名称
        release_name: Release ${{ github.ref }}
        draft: false # 是否是草稿
        prerelease: false # 是否是预发布

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传地址，通过创建Release获取到的
        asset_path: ./release.tgz 
        asset_name: release.tgz 
        asset_content_type: application/x-tgz

    # 第五步：部署到服务器
    - name: Deploy
      uses: appleboy/ssh-action@master # 使用ssh链接服务器
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
          # 备份

          # 覆盖

          cd /data/cybermap
          wget https://github.com/BUPTNJ/cybermap/releases/latest/download/release.tgz -O cybermap_src.tgz
          tar zxvf cybermap_src.tgz -C /data/cybermap/pages

